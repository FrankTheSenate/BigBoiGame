<!--This Document is generated by GameMaker, if you edit it by hand then you do so at your own risk!-->
<object>
  <spriteName>spr_nick_bullet_idle</spriteName>
  <solid>0</solid>
  <visible>-1</visible>
  <depth>0</depth>
  <persistent>0</persistent>
  <parentName>&lt;undefined&gt;</parentName>
  <maskName>&lt;undefined&gt;</maskName>
  <events>
    <event eventtype="0" enumb="0">
      <action>
        <libid>1</libid>
        <id>603</id>
        <kind>7</kind>
        <userelative>0</userelative>
        <isquestion>0</isquestion>
        <useapplyto>-1</useapplyto>
        <exetype>2</exetype>
        <functionname></functionname>
        <codestring></codestring>
        <whoName>self</whoName>
        <relative>0</relative>
        <isnot>0</isnot>
        <arguments>
          <argument>
            <kind>1</kind>
            <string>///Variables

grav = 1
spd = 7.5
jspd = 16
hspd = 0
vspd = 0
fric = 1
</string>
          </argument>
        </arguments>
      </action>
    </event>
    <event eventtype="3" enumb="0">
      <action>
        <libid>1</libid>
        <id>603</id>
        <kind>7</kind>
        <userelative>0</userelative>
        <isquestion>0</isquestion>
        <useapplyto>-1</useapplyto>
        <exetype>2</exetype>
        <functionname></functionname>
        <codestring></codestring>
        <whoName>self</whoName>
        <relative>0</relative>
        <isnot>0</isnot>
        <arguments>
          <argument>
            <kind>1</kind>
            <string>
var rkey = keyboard_check(ord("D"));
var lkey = keyboard_check(ord("A"));
var jkey = keyboard_check(ord("W"));

/// Check for ground
if (place_meeting(x, y+1, obj_wood)) {
    vspd= 0;
    
    //Jumping
    if (jkey) {
    vspd = -jspd
    }
}   else  {
      // Gravity
      if (vspd &lt; 10) {
      vspd += grav;
      }
      if (keyboard_check_released(ord("W")) and vspd &lt;-4){
      vspd = -4
      }
}
// Moving to the right
if (rkey){
hspd = spd;
sprite_index = spr_nick_bullet_walking
image_xscale = -1

    //Wall Jump Left
    if (place_meeting(x-1, y, obj_wood) and !place_meeting(x, y+1 , obj_wood) and !lkey)
        {
        vspd = -jspd;
    }
}
/// Moving to the left
if (lkey) {
hspd = -spd
sprite_index = spr_nick_bullet_walking
image_xscale = 1
if (place_meeting (x+1, y, obj_wood) and !place_meeting(x, y+1, obj_wood) and !rkey){
vspd = -jspd
}
}
///Check for not moving
if ((!rkey &amp;&amp; !lkey) || (rkey &amp;&amp; lkey)) {
   hspd = 0
}
   
// horizontal collisions
if (place_meeting (x+hspd,y+0 , obj_wood)) {
    while (!place_meeting(x+sign(hspd),y, obj_wood)) {
          x+=sign(hspd);
     }
     hspd=0
     }
     // Move horizontally
     x+=hspd;     
      
     
       // vertical collisions
if (place_meeting (x, y+vspd,obj_wood)) {
    while (!place_meeting(x, y+sign(vspd),obj_wood)) {
          y+=sign(vspd);
     }
     vspd=0;

}
     
     // Move horizontally
     y+=vspd
     
     
if vspd &gt; 0  or vspd &lt; 0 or keyboard_check(ord("W")) and vspd &lt; 0 and vspd &gt; 0
{
   sprite_index = spr_nick_bullet_jump
}
if keyboard_check(ord("W")) and vspd = 0
{
sprite_index = spr_nick_bullet_idle
}
if vspd &gt; 0  or vspd &lt; 0 or keyboard_check(ord("W")) and vspd &lt; 0 and vspd &gt; 0
{
   sprite_index = spr_nick_bullet_jump
}
if keyboard_check(ord("A")) = false and keyboard_check(ord("D")) = false and keyboard_check(ord("S")) = false and keyboard_check(ord("W")) = false and vspd = 0 and hspd = 0
{
sprite_index = spr_nick_bullet_idle
}
</string>
          </argument>
        </arguments>
      </action>
      <action>
        <libid>1</libid>
        <id>603</id>
        <kind>7</kind>
        <userelative>0</userelative>
        <isquestion>0</isquestion>
        <useapplyto>-1</useapplyto>
        <exetype>2</exetype>
        <functionname></functionname>
        <codestring></codestring>
        <whoName>self</whoName>
        <relative>0</relative>
        <isnot>0</isnot>
        <arguments>
          <argument>
            <kind>1</kind>
            <string>image_speed = 0.3
</string>
          </argument>
        </arguments>
      </action>
    </event>
  </events>
  <PhysicsObject>0</PhysicsObject>
  <PhysicsObjectSensor>0</PhysicsObjectSensor>
  <PhysicsObjectShape>0</PhysicsObjectShape>
  <PhysicsObjectDensity>0.5</PhysicsObjectDensity>
  <PhysicsObjectRestitution>0.100000001490116</PhysicsObjectRestitution>
  <PhysicsObjectGroup>0</PhysicsObjectGroup>
  <PhysicsObjectLinearDamping>0.100000001490116</PhysicsObjectLinearDamping>
  <PhysicsObjectAngularDamping>0.100000001490116</PhysicsObjectAngularDamping>
  <PhysicsObjectFriction>0.200000002980232</PhysicsObjectFriction>
  <PhysicsObjectAwake>-1</PhysicsObjectAwake>
  <PhysicsObjectKinematic>0</PhysicsObjectKinematic>
  <PhysicsShapePoints/>
</object>
